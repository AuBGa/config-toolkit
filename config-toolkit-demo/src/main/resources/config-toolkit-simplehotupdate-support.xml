<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:c="http://www.springframework.org/schema/c"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:config="https://crnlmchina.github.io/config"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
             https://crnlmchina.github.io/config https://crnlmchina.github.io/config/config.xsd">


	<context:component-scan base-package="com.dangdang.config" />

	<!-- New version -->
	<util:properties id="configToolkitConfigs" location="classpath:config-toolkit.properties" />

	<!-- Config Profile -->
	<config:profile id="configProfile" connect-str="#{configToolkitConfigs['zk.address']}" root-node="/projectx/modulex"
		version="#{configToolkitConfigs['zk.configs.version']}"/>
	<config:group id="propertyGroup1" node="property-group1" config-profile-ref="configProfile"/>
	<config:group id="propertyGroup2" node="property-group1" config-profile-ref="configProfile"/>
		
	<config:placeholder>
		<config:group node="property-group1" />	
		<config:group node="property-group2" />	
	</config:placeholder>

    <!-- hot update -->
	<bean id="valueComplexResolvePostPrecessor" class="com.dangdang.config.service.support.spring.ValueComplexResolvePostPrecessor">
		<property name="generalConfigGroups">
			<set>
				<ref bean="propertyGroup1" />
				<ref bean="propertyGroup2" />
			</set>
		</property>
		<property name="scanPackages">
			<set>
				<value>com.dangdang.config.service.easyzk.demo.simple</value>
			</set>
		</property>
		<property name="reinitialize" value="true" /> <!-- reinit after hot update -->
		<property name="destroyBeforeReinitialize" value="true" /> <!-- destroy before reinit -->
		<property name="threadSize" value="10" />
	</bean>

	<!-- Inject property with used spring style -->
	<bean class="com.dangdang.config.service.easyzk.demo.simple.ExampleBeanWithValueAnno" init-method="init">
		<property name="cool" value="${cool}" />
	</bean>

</beans>